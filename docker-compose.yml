version: '3'

services:
  # Database
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    networks:
      - archistack
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@test.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin
    ports:
      - "5050:80"
    networks:
        - archistack
    depends_on:
      - db

  # Backend

  country:
    build:
      context: ./backend
      dockerfile: ./micro_service_country/Dockerfile
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - '8082:8082'
    networks:
      - archistack

  user:
    build:
      context: ./backend
      dockerfile: ./micro_service_user/Dockerfile
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - '8081:8081'
    networks:
      - archistack

  game:
    build:
      context: ./backend
      dockerfile: ./micro_service_game/Dockerfile
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - '8083:8083'
    networks:
      - archistack

  proxyauth:
    build:
      context: ./backend
      dockerfile: ./micro_service_proxyauth/Dockerfile
    depends_on:
      - db
    ports:
      - '8080:8080'
    networks:
      - archistack

  # Frontend

  frontend:
    build: ./frontend
    ports:
      - '80:80'
    networks:
      - archistack

volumes:
  postgres-data:

networks:
  archistack: